#!/usr/bin/env node

/**
 * Team Roster Setup Script
 * 
 * This script sets up the complete Team Roster functionality by:
 * 1. Initializing the Team Roster menu item
 * 2. Seeding the database with team member data from the spreadsheet
 * 
 * Usage: node setup-team-roster.js
 */

const { initializeTeamRosterMenu } = require('./initialize-team-roster-menu');
const { seedTeamRoster } = require('./seed-team-roster');
const mongoose = require('mongoose');

// MongoDB connection
const connectDB = async () => {
  try {
    await mongoose.connect('mongodb://localhost:27017/data-literacy-support', {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('‚úÖ MongoDB connected successfully');
  } catch (error) {
    console.error('‚ùå MongoDB connection error:', error);
    process.exit(1);
  }
};

// Main setup function
const setupTeamRoster = async () => {
  console.log('üöÄ Starting Team Roster Complete Setup...\n');
  
  try {
    // Step 1: Initialize menu
    console.log('üìã Step 1: Initializing Team Roster menu...');
    await initializeTeamRosterMenu();
    console.log('‚úÖ Menu initialization completed\n');
    
    // Step 2: Seed team data
    console.log('üë• Step 2: Seeding team roster data...');
    await seedTeamRoster();
    console.log('‚úÖ Team data seeding completed\n');
    
    // Success summary
    console.log('üéâ TEAM ROSTER SETUP COMPLETE! üéâ');
    console.log('‚ïê'.repeat(50));
    console.log('üìç Team Roster URL: http://localhost:3008/admin/team-roster');
    console.log('‚öôÔ∏è  Menu Management: http://localhost:3008/admin/menu-management');
    console.log('üè† Dashboard: http://localhost:3008/dashboard');
    console.log('‚ïê'.repeat(50));
    console.log('\n‚ú® The Team Roster is now fully functional with:');
    console.log('   ‚Ä¢ 10 team members loaded from spreadsheet data');
    console.log('   ‚Ä¢ Complete skills and capacity tracking');
    console.log('   ‚Ä¢ Click-anywhere-to-edit functionality');
    console.log('   ‚Ä¢ Real-time utilization calculations');
    console.log('   ‚Ä¢ Section 508 accessibility compliance');
    console.log('   ‚Ä¢ Admin menu integration');
    
  } catch (error) {
    console.error('‚ùå Setup failed:', error);
    throw error;
  }
};

// Main execution
const main = async () => {
  try {
    await connectDB();
    await setupTeamRoster();
    console.log('\n‚úÖ All setup operations completed successfully!');
  } catch (error) {
    console.error('‚ùå Script execution failed:', error);
    process.exit(1);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Database connection closed');
    process.exit(0);
  }
};

// Run the script
if (require.main === module) {
  main();
}

module.exports = { setupTeamRoster };
